GN schedEvToFR.txt: doctest file


>>> from schedEvToFr import *

>>> frame_q = Queue.Queue(10)
>>> ev_q = Queue.Queue(10)
>>> out_queues = { \
...    'frames':    (frame_q) \
... }
>>> sch = SchedEvToFr(ev_q, out_queues)
 
# create events and put in input queue
>>> for name in ['MgmtBeacon', 'CtrlRTS', 'CtrlCTS', 'DataData']:
...     ev = if_events.mkevent(name, ev_dc={'src_addr':'100','dst_addr':'150'})
...     print ev
...     ev_q.put(ev, False)
Event class name: EventFrameMgmt
  Nickname: 'MgmtBeacon'; Type: 'Mgmt'; SubType: 'Beacon'
  retry: 0
  src_addr: 100
  peerlinkId: 0
  duration: 10
  frame_length: 0
  dst_addr: 150
  Frame packet: 
  Payload: ''
Event class name: EventFrame
  Nickname: 'CtrlRTS'; Type: 'Ctrl'; SubType: 'RTS'
  retry: 0
  src_addr: 100
  peerlinkId: 0
  duration: 10
  frame_length: 0
  dst_addr: 150
  Frame packet: 
  Payload: ''
Event class name: EventFrame
  Nickname: 'CtrlCTS'; Type: 'Ctrl'; SubType: 'CTS'
  retry: 0
  src_addr: 100
  peerlinkId: 0
  duration: 10
  frame_length: 0
  dst_addr: 150
  Frame packet: 
  Payload: ''
Event class name: EventFrame
  Nickname: 'DataData'; Type: 'Data'; SubType: 'Data'
  retry: 0
  src_addr: 100
  peerlinkId: 0
  duration: 10
  frame_length: 0
  dst_addr: 150
  Frame packet: 
  Payload: ''

>>> print 'Input queue size', ev_q.qsize()
Input queue size 4

# create and start scheduler
>>> sch.start()
>>> ev_q.join()
>>> sch.stop()
>>> sch.join()   
 

# read the output queue
>>> print 'Queue size:', frame_q.qsize()
Queue size: 4
>>> while not frame_q.empty():
...     item = frame_q.get()
...     print "Frame ", repr(item)
Frame  '\x80\x00\x00\n100\x00\x00\x00150\x00\x00\x00dt-ad3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x01\x00 SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS------------\x00\x00\x00\x00\x00\x00'
Frame  '\xb4\x00\x00\n150\x00\x00\x00100\x00\x00\x00\x00\x00\x00\x00'
Frame  '\xc4\x00\x00\n150\x00\x00\x00\x00\x00\x00\x00'
Frame  '\x08\x00\x00\n100\x00\x00\x00150\x00\x00\x00dt-ad3\x00\x00\x00\x00\x00\x00\x00\x00dt-ad2\x00\x00\x00\x00'



